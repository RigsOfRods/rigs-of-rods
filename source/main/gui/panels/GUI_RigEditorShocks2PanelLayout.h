#pragma once

// ----------------------------------------------------------------------------
// Generated by MyGUI's LayoutEditor using RoR's code templates.
// Find the templates at [repository]/tools/MyGUI_LayoutEditor/
//
// IMPORTANT:
// Do not modify this code directly. Create a derived class instead.
// ----------------------------------------------------------------------------

#include "ForwardDeclarations.h"
#include "BaseLayout.h"

namespace RoR
{

namespace GUI
{
	
ATTRIBUTE_CLASS_LAYOUT(RigEditorShocks2PanelLayout, "rig_editor_shocks2_panel.layout");
class RigEditorShocks2PanelLayout : public wraps::BaseLayout
{

public:

	RigEditorShocks2PanelLayout(MyGUI::Widget* _parent = nullptr);
	virtual ~RigEditorShocks2PanelLayout();

protected:

	//%LE Widget_Declaration list start
	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_shocks2_panel, "shocks2_panel");
	MyGUI::Window* m_shocks2_panel;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_beam_type_combobox, "beam_type_combobox");
	MyGUI::ComboBox* m_beam_type_combobox;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_beam_type_label, "beam_type_label");
	MyGUI::TextBox* m_beam_type_label;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_detacher_group_label, "detacher_group_label");
	MyGUI::TextBox* m_detacher_group_label;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_detacher_group_editbox, "detacher_group_editbox");
	MyGUI::EditBox* m_detacher_group_editbox;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_spring_in_label, "spring_in_label");
	MyGUI::TextBox* m_spring_in_label;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_spring_in_editbox, "spring_in_editbox");
	MyGUI::EditBox* m_spring_in_editbox;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_damp_in_label, "damp_in_label");
	MyGUI::TextBox* m_damp_in_label;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_damp_in_editbox, "damp_in_editbox");
	MyGUI::EditBox* m_damp_in_editbox;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_flags_label, "flags_label");
	MyGUI::TextBox* m_flags_label;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_flag_i_checkbox, "flag_i_checkbox");
	MyGUI::Button* m_flag_i_checkbox;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_flag_s_checkbox, "flag_s_checkbox");
	MyGUI::Button* m_flag_s_checkbox;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_flag_m_checkbox, "flag_m_checkbox");
	MyGUI::Button* m_flag_m_checkbox;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_flags_tooltip_label, "flags_tooltip_label");
	MyGUI::TextBox* m_flags_tooltip_label;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_contraction_limit_label, "contraction_limit_label");
	MyGUI::TextBox* m_contraction_limit_label;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_contraction_limit_editbox, "contraction_limit_editbox");
	MyGUI::EditBox* m_contraction_limit_editbox;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_extension_limit_label, "extension_limit_label");
	MyGUI::TextBox* m_extension_limit_label;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_extension_limit_editbox, "extension_limit_editbox");
	MyGUI::EditBox* m_extension_limit_editbox;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_precompression_label, "precompression_label");
	MyGUI::TextBox* m_precompression_label;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_precompression_editbox, "precompression_editbox");
	MyGUI::EditBox* m_precompression_editbox;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_spring_in_progress_label, "spring_in_progress_label");
	MyGUI::TextBox* m_spring_in_progress_label;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_spring_in_progress_editbox, "spring_in_progress_editbox");
	MyGUI::EditBox* m_spring_in_progress_editbox;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_spring_out_label, "spring_out_label");
	MyGUI::TextBox* m_spring_out_label;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_spring_out_editbox, "spring_out_editbox");
	MyGUI::EditBox* m_spring_out_editbox;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_spring_out_progress_label, "spring_out_progress_label");
	MyGUI::TextBox* m_spring_out_progress_label;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_spring_out_progress_editbox, "spring_out_progress_editbox");
	MyGUI::EditBox* m_spring_out_progress_editbox;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_damp_in_progress_label, "damp_in_progress_label");
	MyGUI::TextBox* m_damp_in_progress_label;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_damp_out_label, "damp_out_label");
	MyGUI::TextBox* m_damp_out_label;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_damp_out_progress_label, "damp_out_progress_label");
	MyGUI::TextBox* m_damp_out_progress_label;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_damp_in_progress_editbox, "damp_in_progress_editbox");
	MyGUI::EditBox* m_damp_in_progress_editbox;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_damp_out_editbox, "damp_out_editbox");
	MyGUI::EditBox* m_damp_out_editbox;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_damp_out_progress_editbox, "damp_out_progress_editbox");
	MyGUI::EditBox* m_damp_out_progress_editbox;

	ATTRIBUTE_FIELD_WIDGET_NAME(RigEditorShocks2PanelLayout, m_flag_M_checkbox, "flag_M_checkbox");
	MyGUI::Button* m_flag_M_checkbox;

	//%LE Widget_Declaration list end
};

} // namespace GUI

} // namespace RoR


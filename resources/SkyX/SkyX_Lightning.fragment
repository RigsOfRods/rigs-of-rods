/*
--------------------------------------------------------------------------------
This source file is part of SkyX.
Visit http://www.paradise-studios.net/products/skyx/

Copyright (C) 2009-2012 Xavier Verguín González <xavyiy@gmail.com>

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place - Suite 330, Boston, MA 02111-1307, USA, or go to
http://www.gnu.org/copyleft/lesser.txt.
--------------------------------------------------------------------------------
*/

// ---------------------------- SkyX lightning ----------------------------------
// ------------------------------ GLSL Vertex -----------------------------------

// IN
varying vec3 vUV;
varying vec4 vData;
// OUT
// UNIFORM
uniform vec3 uColor;

void main(void)
{    
    float intensity = 0.0;
	float mult = 1.0;
	float smoothAvance = 16.0;
	
	// OGL doesn't like varying assignements
	vec3 UV = vUV;

	if (vData.x+UV.y*(vData.y-vData.x) > vData.z)
	{
		UV.z *= 1.0-clamp(length(vData.x+UV.y*(vData.y-vData.x) - vData.z)*smoothAvance,0.0,1.0);
	}
	
	if (UV.y > 2.0)
	{
		UV.y-=2.0; // Get back y coord
		intensity = clamp((1.0-2.0*length(vec2(0.5,0.0)-UV.xy)),0.0,1.0)*mult;
	}
	else
	{
		intensity = (1.0-2.0*length(0.5-UV.x))*mult;
	}
	
	intensity = pow(intensity,1.0/(0.1+UV.z));
	
	// Falling effect
	smoothAvance = 6.0;
	UV.z *= 1.0-vData.w*clamp(length(vData.x+UV.y*(vData.y-vData.x) - vData.z)*smoothAvance,0.0,1.0);
	
	// Final color
	gl_FragColor = vec4(uColor*UV.z*intensity, 1.0);
}
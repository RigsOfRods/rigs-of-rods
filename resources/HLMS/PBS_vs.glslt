#ifndef GL_ES
#version 120
#else
#version 300 es

#define varying out
#define attribute in

precision highp int;
precision highp float;
#endif

uniform mat4 mvpMat;
uniform mat4 mvMat;

attribute vec4 vertex;
attribute vec3 normal;
attribute vec3 tangent;

// add the uv attributes (prevent duplicates)
attribute vec4 uv@value(uvset_main_index);

@property( uvset_d1_setattribute )
	attribute vec4 uv@value(uvset_d1_index);
@end
@property( uvset_d2_setattribute )
	attribute vec4 uv@value(uvset_d2_index);
@end

varying vec3 var_position_es;
varying vec3 var_normal_es;
varying vec3 var_tangent_es;

@property( map_main_albedo || map_main_normalr || map_main_f0)
	varying vec2 var_mainUv;
@end

@property( map_d1_albedo || map_d1_normalr || map_d1_f0)
	varying vec2 var_d1Uv;
@end

@property( map_d2_albedo || map_d2_normalr || map_d2_f0)
	varying vec2 var_d2Uv;
@end

void main(void)
{
	gl_Position = mvpMat * vertex;
	var_position_es = vec3(mvMat * vertex);
	var_normal_es = vec3(mvMat * vec4(normal, 0.0));
	var_tangent_es = vec3(mvMat * vec4(tangent, 0.0));
	
	@property( map_main_albedo || map_main_normalr || map_main_f0)
		var_mainUv = uv@value(uvset_main_index).xy;
	@end

	@property( map_d1_albedo || map_d1_normalr || map_d1_f0)
		var_d1Uv = uv@value(uvset_d1_index).xy;
	@end

	@property( map_d2_albedo || map_d2_normalr || map_d2_f0)
		var_d2Uv = uv@value(uvset_d2_index).xy;
	@end
}
